package pe.com.pdp.domain.postgres;

import java.util.ArrayList;
import java.util.List;

public class EncontradoFotoCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public EncontradoFotoCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("\"id\" is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("\"id\" is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("\"id\" =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("\"id\" <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("\"id\" >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("\"id\" >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("\"id\" <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("\"id\" <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("\"id\" in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("\"id\" not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("\"id\" between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("\"id\" not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdIsNull() {
            addCriterion("\"encontrado_id\" is null");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdIsNotNull() {
            addCriterion("\"encontrado_id\" is not null");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdEqualTo(Integer value) {
            addCriterion("\"encontrado_id\" =", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdNotEqualTo(Integer value) {
            addCriterion("\"encontrado_id\" <>", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdGreaterThan(Integer value) {
            addCriterion("\"encontrado_id\" >", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("\"encontrado_id\" >=", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdLessThan(Integer value) {
            addCriterion("\"encontrado_id\" <", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdLessThanOrEqualTo(Integer value) {
            addCriterion("\"encontrado_id\" <=", value, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdIn(List<Integer> values) {
            addCriterion("\"encontrado_id\" in", values, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdNotIn(List<Integer> values) {
            addCriterion("\"encontrado_id\" not in", values, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdBetween(Integer value1, Integer value2) {
            addCriterion("\"encontrado_id\" between", value1, value2, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andEncontradoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("\"encontrado_id\" not between", value1, value2, "encontradoId");
            return (Criteria) this;
        }

        public Criteria andFotoIsNull() {
            addCriterion("\"foto\" is null");
            return (Criteria) this;
        }

        public Criteria andFotoIsNotNull() {
            addCriterion("\"foto\" is not null");
            return (Criteria) this;
        }

        public Criteria andFotoEqualTo(String value) {
            addCriterion("\"foto\" =", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoNotEqualTo(String value) {
            addCriterion("\"foto\" <>", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoGreaterThan(String value) {
            addCriterion("\"foto\" >", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoGreaterThanOrEqualTo(String value) {
            addCriterion("\"foto\" >=", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoLessThan(String value) {
            addCriterion("\"foto\" <", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoLessThanOrEqualTo(String value) {
            addCriterion("\"foto\" <=", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoLike(String value) {
            addCriterion("\"foto\" like", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoNotLike(String value) {
            addCriterion("\"foto\" not like", value, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoIn(List<String> values) {
            addCriterion("\"foto\" in", values, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoNotIn(List<String> values) {
            addCriterion("\"foto\" not in", values, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoBetween(String value1, String value2) {
            addCriterion("\"foto\" between", value1, value2, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoNotBetween(String value1, String value2) {
            addCriterion("\"foto\" not between", value1, value2, "foto");
            return (Criteria) this;
        }

        public Criteria andFotoLikeInsensitive(String value) {
            addCriterion("upper(\"foto\") like", value.toUpperCase(), "foto");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 16 14:09:49 COT 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pataPerro.td_encontrado_foto
     *
     * @mbg.generated Thu Mar 16 14:09:49 COT 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}